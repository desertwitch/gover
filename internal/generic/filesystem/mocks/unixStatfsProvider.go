// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	unix "golang.org/x/sys/unix"
)

// UnixStatfsProvider is an autogenerated mock type for the unixStatfsProvider type
type UnixStatfsProvider struct {
	mock.Mock
}

type UnixStatfsProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *UnixStatfsProvider) EXPECT() *UnixStatfsProvider_Expecter {
	return &UnixStatfsProvider_Expecter{mock: &_m.Mock}
}

// Statfs provides a mock function with given fields: path, buf
func (_m *UnixStatfsProvider) Statfs(path string, buf *unix.Statfs_t) error {
	ret := _m.Called(path, buf)

	if len(ret) == 0 {
		panic("no return value specified for Statfs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *unix.Statfs_t) error); ok {
		r0 = rf(path, buf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnixStatfsProvider_Statfs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Statfs'
type UnixStatfsProvider_Statfs_Call struct {
	*mock.Call
}

// Statfs is a helper method to define mock.On call
//   - path string
//   - buf *unix.Statfs_t
func (_e *UnixStatfsProvider_Expecter) Statfs(path interface{}, buf interface{}) *UnixStatfsProvider_Statfs_Call {
	return &UnixStatfsProvider_Statfs_Call{Call: _e.mock.On("Statfs", path, buf)}
}

func (_c *UnixStatfsProvider_Statfs_Call) Run(run func(path string, buf *unix.Statfs_t)) *UnixStatfsProvider_Statfs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*unix.Statfs_t))
	})
	return _c
}

func (_c *UnixStatfsProvider_Statfs_Call) Return(_a0 error) *UnixStatfsProvider_Statfs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *UnixStatfsProvider_Statfs_Call) RunAndReturn(run func(string, *unix.Statfs_t) error) *UnixStatfsProvider_Statfs_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnixStatfsProvider creates a new instance of UnixStatfsProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnixStatfsProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnixStatfsProvider {
	mock := &UnixStatfsProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
